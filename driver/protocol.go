package driver

import "github.com/thingio/edge-device-std/models"

var ModbusTCP = &models.Protocol{
	ID:       "modbus_tcp",
	Name:     "Modbus TCP",
	Desc:     "基于以太网口的Modbus协议",
	Category: "tick",
	Language: "ch",
	SupportFuncs: []string{
		"property",
	},
	AuxProps: []*models.Property{
		{
			Id:       "rgs_type",
			Name:     "数据类型",
			Desc:     "数据类型,主要分为离散量输入(1bit,只读)、线圈状态(1bit,读写)、输入寄存器(16bits,只读)、保持寄存器(16bits,读写)",
			Type:     "string",
			UIStyle:  "selector",
			Default:  "hold_register",
			Range:    "coil@@线圈,discrete_input@@离散输入,hold_register@@保持寄存器,input_register@@输入寄存器",
			Required: true,
		},
		{
			Id:       "rgs_addr",
			Desc:     "线圈/离散输入/寄存器的起始地址,0至65536",
			Name:     "起始地址",
			Type:     "int",
			UIStyle:  "input",
			Default:  "0",
			Range:    "0-65536",
			Required: true,
		},
		{
			Id:       "rgs_count",
			Desc:     "读取/写入的线圈/离散输入/寄存器的数目",
			Name:     "操作数目",
			Type:     "int",
			UIStyle:  "input",
			Default:  "1",
			Range:    "0-65535",
			Required: true,
		},
		{
			Id:           "byte_endian",
			Desc:         "是否交换寄存器内高低字节顺序",
			Name:         "交换寄存器内高低字节",
			Type:         "string",
			UIStyle:      "selector",
			Default:      "big",
			Range:        "big@@false,little@@true",
			Required:     true,
			Precondition: "field_type!=string&&field_type!=bool",
		},
		{
			Id:           "word_endian",
			Desc:         "是否交换多个寄存器的顺序",
			Name:         "交换寄存器顺序",
			Type:         "string",
			UIStyle:      "selector",
			Default:      "big",
			Range:        "big@@false,little@@true",
			Required:     true,
			Precondition: "field_type!=string&&field_type!=bool",
		},
	},
	DeviceProps: []*models.Property{
		{
			Id:       "ip",
			Desc:     "ModbusTcp设备/服务器所在IP",
			Name:     "IP地址",
			Type:     "string",
			UIStyle:  "input",
			Default:  "127.0.0.1",
			Required: true,
		},
		{
			Id:       "port",
			Desc:     "ModbusTcp设备/服务器服务的端口,默认为502",
			Name:     "端口",
			Type:     "int",
			UIStyle:  "input",
			Range:    "0-65535",
			Default:  "502",
			Required: true,
		},
		{
			Id:      "slave",
			Desc:    "若ModbusTcp设备为通过网关接入的串行设备,则该字段为其从设备号,否则无效",
			Name:    "从设备号",
			Type:    "int",
			UIStyle: "input",
			Range:   "0-65535",
			Default: "0",
		},
		{
			Id:       "serial_bridge",
			Desc:     "设备是否为通过网关接入的串行设备",
			Name:     "桥接的串行设备",
			Type:     "bool",
			UIStyle:  "selector",
			Range:    "true@@是,false@@否",
			Default:  "true",
			Required: true,
		},
		{
			Id:       "timeout",
			Desc:     "超时间隔(毫秒)",
			Name:     "超时间隔(毫秒)",
			Type:     "int",
			UIStyle:  "input",
			Default:  "2000",
			Required: true,
		},
	},
}

var ModbusRTU = &models.Protocol{
	ID:       "modbus_rtu",
	Name:     "Modbus RTU",
	Desc:     "基于串口通信的Modbus协议",
	Category: "tick",
	Language: "ch",
	SupportFuncs: []string{
		"property",
	},
	AuxProps: []*models.Property{
		{
			Id:       "rgs_type",
			Desc:     "寄存器类型,主要分为离散量输入(1bit,只读)、线圈状态(1bit,读写)、输入寄存器(16bits,只读)、保持寄存器(16bits,读写)",
			Name:     "寄存器类型",
			Type:     "string",
			UIStyle:  "selector",
			Default:  "hold_register",
			Range:    "coil@@线圈,discrete_input@@离散输入,hold_register@@保持寄存器,input_register@@输入寄存器",
			Required: true,
		},
		{
			Id:       "rgs_addr",
			Desc:     "线圈/离散输入/寄存器的起始地址,0至65536",
			Name:     "起始地址",
			Type:     "int",
			UIStyle:  "input",
			Default:  "0",
			Range:    "0-65536",
			Required: true,
		},
		{
			Id:       "rgs_count",
			Desc:     "读取/写入的线圈/离散输入/寄存器的数目",
			Name:     "操作数目",
			Type:     "int",
			UIStyle:  "input",
			Default:  "1",
			Range:    "0-65535",
			Required: true,
		},
		{
			Id:           "byte_endian",
			Desc:         "是否交换寄存器内高低字节顺序",
			Name:         "交换寄存器内高低字节",
			Type:         "string",
			UIStyle:      "selector",
			Default:      "big",
			Range:        "big@@false,little@@true",
			Required:     true,
			Precondition: "field_type!=string&&field_type!=bool",
		},
		{
			Id:           "word_endian",
			Desc:         "是否交换多个寄存器(每个寄存器大小为16bit)的顺序",
			Name:         "交换寄存器顺序",
			Type:         "string",
			UIStyle:      "selector",
			Default:      "big",
			Range:        "big@@false,little@@true",
			Required:     true,
			Precondition: "field_type!=string&&field_type!=bool",
		},
	},
	DeviceProps: []*models.Property{
		{
			Id:       "slave",
			Desc:     "从站号",
			Name:     "从站号",
			Type:     "int",
			UIStyle:  "input",
			Default:  "1",
			Range:    "1-247",
			Required: true,
		},
		{
			Id:       "serial_device",
			Desc:     "串行端口",
			Name:     "串口",
			Type:     "string",
			UIStyle:  "input",
			Required: true,
		},
		{
			Id:       "baud_rate",
			Desc:     "波特率",
			Name:     "波特率",
			Type:     "int",
			UIStyle:  "selector",
			Default:  "9600",
			Range:    "2400@@2400,4800@@4800,9600@@9600,19200@@19200,38400@@38400,57600@@57600,115200@@115200",
			Required: true,
		},
	},
}
